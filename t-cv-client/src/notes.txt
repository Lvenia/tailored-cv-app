What data are you going to collect from user?
name: ["Firstname Lastname", "Firstname2 Lastname2"],
role: ["Junior Web Developer", "Web Developer", "Frontend Developer", "Front-end Developer", "Fullstack developer"],
contact information: {
email: ["", ""],
phone: ["", ""],
linkedinUrl: ["", ""],
githubUrl: ["", ""],
}
summary: ["", ""],
workExp: [
{
period: {start: "", end: "", currently: bool},
title: "Position.ProjectName",
subtitle: "Employer",
bullets: ["", "", ""]
},
{
period: {start: "", end: "", currently: bool},
title: "Position.ProjectName",
subtitle: "Employer",
bullets: ["", "", ""]
},
]
education: [
{
period: {start: "", end: "", currently: bool},
title: "Degree",
subtitle: "School",
bullets: ["", "", ""]
},
period: {start: "", end: "", currently: bool},
title: "Degree",
subtitle: "School",
bullets: ["", "", ""]
},
],
certificates: ["", "", ""],
skills: ["", "", ""],

useState hook
_controls single state variable,
_you can control each widget with its own state variable, component will rerender on each keystroke
_on submit (enter) you can dispatch it to the global state

useReducer:
usually preferable to useState when you have complex state logic
that involves multiple sub-values
or when the next state depends on the previous one.
useReducer also lets you optimize performance for components
that trigger deep updates because you can pass dispatch down instead of callbacks.